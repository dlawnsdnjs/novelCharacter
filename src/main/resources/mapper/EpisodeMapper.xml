<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.novelcharacter.mapper.EpisodeMapper">
    <insert id="insertEpisode" useGeneratedKeys="true" keyProperty="episodeNum" parameterType="EpisodeDTO">
        INSERT INTO Episode (novelNum, episodeTitle, episodeSummary, orderIndex) VALUES (#{novelNum}, #{episodeTitle}, #{episodeSummary}, #{orderIndex});
    </insert>

    <update id="updateOrderIndexNull" parameterType="EpisodeDTO">
        UPDATE Episode
        SET orderIndex = #{episodeNum}
        WHERE episodeNum = #{episodeNum} AND orderIndex IS NULL;
    </update>

    <select id="selectAllEpisode" resultType="EpisodeDTO">
        SELECT * FROM Episode WHERE novelNum = #{novelNum};
    </select>

    <select id="selectEpisodePage" resultType="EpisodeDTO">
        SELECT * FROM Episode WHERE novelNum = #{novelNum}
        LIMIT 20 OFFSET #{offset};
    </select>

<!--    <update id="rebalanceOrderIndex">-->
<!--        WITH ordered AS (-->
<!--            SELECT episodeNum,-->
<!--                   ROW_NUMBER() OVER (ORDER BY episodeNum) * 100 AS new_order-->
<!--            FROM Episode-->
<!--        )-->
<!--        UPDATE Episode-->
<!--        SET orderIndex = ordered.new_order-->
<!--            FROM ordered-->
<!--        WHERE Episode.episodeNum = ordered.episodeNum;-->
<!--    </update>-->

    <select id="selectEpisodeById" resultType="EpisodeDTO">
        SELECT * FROM Episode WHERE episodeNum = #{episodeNum};
    </select>

    <select id="checkEpisodeOwner">
        SELECT 1
        FROM Episode e
        JOIN Novel n ON e.novelNum = n.novelNum
        WHERE e.episodeNum = #{episodeNum} AND n.uuid = #{uuid};
    </select>

    <select id="searchEpisode" resultType="EpisodeDTO">
        SELECT * FROM Episode WHERE episodeTitle LIKE CONCAT('%', #{search}, '%');
    </select>

    <update id="updateEpisode" parameterType="EpisodeDTO">
        UPDATE Episode SET novelNum = #{novelNum}, episodeTitle = #{episodeTitle}, episodeSummary = #{episodeSummary}, orderIndex=#{orderIndex} WHERE episodeNum = #{episodeNum};
    </update>

    <delete id="deleteEpisode">
        DELETE FROM Episode WHERE episodeNum = #{episodeNum};
    </delete>
</mapper>